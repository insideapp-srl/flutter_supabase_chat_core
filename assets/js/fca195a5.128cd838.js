"use strict";(self.webpackChunkflutter_supabase_chat_core=self.webpackChunkflutter_supabase_chat_core||[]).push([[992],{4318:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"guides/supabase-triggers","title":"Database Triggers","description":"This is an example of a triggers that sets room\'s lastMessages to the most recent message sent once recieved in Supabase.","source":"@site/docs/guides/supabse-trigges.md","sourceDirName":"guides","slug":"/guides/supabase-triggers","permalink":"/guides/supabase-triggers","draft":false,"unlisted":false,"editUrl":"https://github.com/insideapp-srl/flutter_supabase_chat_core/docs/guides/supabse-trigges.md","tags":[],"version":"current","frontMatter":{"id":"supabase-triggers","title":"Database Triggers"},"sidebar":"tutorialSidebar","previous":{"title":"Security Rules","permalink":"/guides/supabase-security"},"next":{"title":"Database Indexes","permalink":"/guides/supabase-indexes"}}');var a=t(4848),r=t(8453);const i={id:"supabase-triggers",title:"Database Triggers"},o=void 0,c={},d=[];function l(e){const s={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:["This is an example of a triggers that sets room's ",(0,a.jsx)(s.code,{children:"lastMessages"})," to the most recent message sent once recieved in Supabase."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:'CREATE OR REPLACE FUNCTION chats.update_last_messages()\n    RETURNS TRIGGER\n    SET search_path = \'\'\nAS $$\nDECLARE\n    ts_in_milliseconds bigint;\nBEGIN\n    SELECT EXTRACT(epoch FROM NOW()) * 1000 INTO ts_in_milliseconds;\n    UPDATE chats.rooms\n    SET "updatedAt" = ts_in_milliseconds,\n        "lastMessages" = jsonb_build_array(NEW)\n    WHERE id = NEW."roomId";\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\ndrop trigger if exists update_last_messages_trigger on chats.messages;\nCREATE TRIGGER update_last_messages_trigger\n    AFTER INSERT OR UPDATE ON chats.messages\n    FOR EACH ROW\nEXECUTE FUNCTION chats.update_last_messages();\n'})}),"\n",(0,a.jsxs)(s.p,{children:['"This trigger, on the other hand, is responsible for setting the message status to ',(0,a.jsx)(s.code,{children:"sent"})," when it is added to the ",(0,a.jsx)(s.code,{children:"messages"})," table:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:"CREATE OR REPLACE FUNCTION chats.set_message_status_to_sent()\n    RETURNS TRIGGER\n    SET search_path = ''\nAS $$\nBEGIN\n    NEW.status := 'sent';\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\ndrop trigger if exists update_status_before_insert on chats.messages;\nCREATE TRIGGER update_status_before_insert\n    BEFORE INSERT ON chats.messages\n    FOR EACH ROW EXECUTE FUNCTION chats.set_message_status_to_sent();\n"})}),"\n",(0,a.jsxs)(s.p,{children:['"This trigger, is responsible for replicate ',(0,a.jsx)(s.code,{children:"auth.users"})," table rows in ",(0,a.jsx)(s.code,{children:"chats.users"})," table, this is to avoid exposing user data :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sql",children:'\nCREATE OR REPLACE FUNCTION chats.handle_new_user()\n    RETURNS trigger\n    LANGUAGE \'plpgsql\'\n    COST 100\n    VOLATILE NOT LEAKPROOF SECURITY DEFINER\n    SET search_path=public\n    SET search_path = \'\'\nAS $BODY$\nDECLARE\n    ts_in_milliseconds bigint;\nBEGIN\n    SELECT EXTRACT(epoch FROM NOW()) * 1000 INTO ts_in_milliseconds;\n    insert into chats.users (id, "createdAt", "updatedAt", "lastSeen")\n    values (new.id, ts_in_milliseconds, ts_in_milliseconds, ts_in_milliseconds);\n    return new;\nend;\n$BODY$;\n\ndrop trigger if exists on_auth_user_created on auth.users;\ncreate trigger on_auth_user_created\n    after insert on auth.users\n    for each row execute procedure chats.handle_new_user();\n\n'})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var n=t(6540);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);