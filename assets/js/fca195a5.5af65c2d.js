"use strict";(self.webpackChunkflutter_supabase_chat_core=self.webpackChunkflutter_supabase_chat_core||[]).push([[992],{1762:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var n=t(4848),a=t(8453);const r={id:"supabase-triggers",title:"Database Triggers"},i=void 0,o={id:"guides/supabase-triggers",title:"Database Triggers",description:"This is an example of a triggers that sets room's lastMessages to the most recent message sent once recieved in Supabase.",source:"@site/docs/guides/supabse-trigges.md",sourceDirName:"guides",slug:"/guides/supabase-triggers",permalink:"/guides/supabase-triggers",draft:!1,unlisted:!1,editUrl:"https://github.com/insideapp-srl/flutter_supabase_chat_core/docs/guides/supabse-trigges.md",tags:[],version:"current",frontMatter:{id:"supabase-triggers",title:"Database Triggers"},sidebar:"tutorialSidebar",previous:{title:"Security Rules",permalink:"/guides/supabase-security"}},c={},u=[];function d(e){const s={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["This is an example of a triggers that sets room's ",(0,n.jsx)(s.code,{children:"lastMessages"})," to the most recent message sent once recieved in Supabase."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:'    CREATE OR REPLACE FUNCTION chats.update_last_messages()\n        RETURNS TRIGGER AS $$\n    DECLARE\n    ts_in_milliseconds bigint;\n    BEGIN\n    SELECT EXTRACT(epoch FROM NOW()) * 1000 INTO ts_in_milliseconds;\n    UPDATE chats.rooms\n    SET "updatedAt" = ts_in_milliseconds,\n        "lastMessages" = jsonb_build_array(NEW)\n    WHERE id = NEW."roomId";\n    RETURN NEW;\n    END;\n    $$ LANGUAGE plpgsql;\n    \n    CREATE TRIGGER update_last_messages_trigger\n        AFTER INSERT ON chats.messages\n        FOR EACH ROW\n    EXECUTE FUNCTION chats.update_last_messages();\n'})}),"\n",(0,n.jsxs)(s.p,{children:['"This trigger, on the other hand, is responsible for setting the message status to ',(0,n.jsx)(s.code,{children:"sent"})," when it is added to the ",(0,n.jsx)(s.code,{children:"messages"})," table:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-sql",children:"CREATE OR REPLACE FUNCTION set_message_status_to_sent()\nRETURNS TRIGGER AS $$\nBEGIN\nNEW.status := 'sent';\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER update_status_before_insert\nBEFORE INSERT ON chats.messages\nFOR EACH ROW EXECUTE FUNCTION set_message_status_to_sent();\n"})})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var n=t(6540);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);